CREATE DATABASE sample;
use sample;

create table country_data (id int , name VARCHAR(20), COUNTRYCODE VARCHAR(10) , DISTRICT VARCHAR(20), POPULATION INT);

INSERT INTO country_data VALUES (6, 'Rotterdam' , 'NLD' , 'Zuid-Holland' , 593321);
INSERT INTO country_data VALUES (3878, 'Scottsdale' , 'USA' , 'arizona' , 33321);
INSERT INTO country_data VALUES (3965, 'Corona' , 'USA' , 'California' , 86521);
INSERT INTO country_data VALUES (3973, 'Concord' , 'USA' , 'California' , 993321);
INSERT INTO country_data VALUES (3977, 'CedarRapids' , 'USA' , 'Iowa' , 171780);
INSERT INTO country_data VALUES (3982, 'Coral Springs' , 'USA' , 'Florida' , 121780);
INSERT INTO country_data VALUES (4054, 'Fairfield' , 'USA' , 'California' , 593321);
INSERT INTO country_data VALUES (4058, 'Boulder' , 'USA' , 'Colorado' , 905555);
INSERT INTO country_data VALUES (4061, 'Fall River' , 'USA' , 'Massachusett' , 90555);

SELECT * FROM country_data;

Q1 . SELECT * FROM  country_data WHERE population > 100000 and COUNTRYCODE = 'USA';

Q2 . SELECT * FROM  country_data WHERE population > 120000 and COUNTRYCODE = 'USA';

===============================================================


create table station (id int , city VARCHAR(20), state VARCHAR(10) , LAT_N INT, LONG_W int);
INSERT INTO station VALUES (794, 'Kissee Mills' , 'MO' , 139 , 73);

INSERT INTO station VALUES (34, 'lomamar' , 'UUM' , 342 , 7323);
INSERT INTO station VALUES (733, 'Mills' , 'JK' , 11439 , 73145);
INSERT INTO station VALUES (231, 'Kissee' , 'YY' , 549 , 7433);
INSERT INTO station VALUES (711, 'Kkoil' , 'BN' , 131 , 563);
INSERT INTO station VALUES (74, 'vadasery' , 'YU' , 13915 , 74313);
INSERT INTO station VALUES (79, 'Krishnan coil' , 'ER' , 13976 , 7153);
INSERT INTO station VALUES (764, 'coimabore' , 'QW' , 13229 , 73723);
INSERT INTO station VALUES (86, 'ganthipuram' , 'ACH' , 137249 , 223);
INSERT INTO station VALUES (774, 'okm' , 'ET' , 2779 , 2753);
INSERT INTO station VALUES (794, 'vanamada' , 'CT ' , 31239 , 4135);
INSERT INTO station VALUES (704, 'velore' , 'FFO' , 62546, 6235);
INSERT INTO station VALUES (714, 'mannur' , 'pp' , 626 , 6332);
INSERT INTO station VALUES (724, 'mylapur' , 'OO' , 85876 , 635631);
INSERT INTO station VALUES (664, 'vadapalami' , 'fO' , 07896 , 452673);

SELECT * FROM station;

Ans1. SELECT city , state  FROM station;

Ans2. SELECT distinct city FROM station WHERE MOD(id,2)=0 ;

Ans3.  #shortest and longest CITY names, as well as their respective lengths
SELECT city , LENGTH(city) FROM station ORDER BY LENGTH(city) ASC , city LIMIT 3;

Ans4.
#names starting with vowels (i.e., a, e, i, o, or u)
select city from station where city REGEXP "^[aeiou].*";

#names starting with vowels (i.e., a, e, i, o, or u)
SELECT DISTINCT(CITY) FROM station WHERE CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' 
OR CITY LIKE '%u';   

Ans5.
#names ending with vowels (a, e, i, o, u) from STATION
SELECT DISTINCT(CITY) FROM station WHERE CITY LIKE 'a%' OR CITY LIKE 'e%' OR CITY LIKE 'i%' OR CITY LIKE 'o%' 
OR CITY LIKE 'u%';

# CITY names from STATION that do not start with vowels.
SELECT DISTINCT CITY FROM station WHERE CITY RLIKE '^[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ].*';

#CITY names from STATION that do not start with vowels and do not end with vowels
select distinct city from station where city regexp '^[^aeiou].*[^aeiou]$';


========================================================================================================




CREATE Table product (id int, name VARCHAR(20), unit_price INT , 
PRIMARY KEY(id)
) ;

INSERT INTO product VALUES (1, 's8' ,1000),
(2, 'G4' ,800),
(3, 'iphone' ,1400);

SELECT * FROM product;

CREATE table sales (seller_id int ,product_id int , buyer_id int, 
sale_date DATE, quantity INT, price INT);

INSERT INTO sales VALUES (1,1,1,'2019-01-21', 2, 2000);
INSERT INTO sales VALUES (1,2,2,'2019-02-17', 1, 800);
INSERT INTO sales VALUES (2,2,3,'2019-06-02', 1, 800);
INSERT INTO sales VALUES (3,3,4,'2019-05-13', 2, 2800);

SELECT * FROM sales;

#products that were only sold in the first quarter of 2019.
#between 2019-01-01 and 2019-03-31 inclusive.

SELECT id, name FROM product INNER JOIN sales ON product.id = sales.seller_id;


#products that were only sold in the first quarter of 2019.
#between 2019-01-01 and 2019-03-31 inclusive.

SELECT id, name FROM product INNER JOIN sales ON product.id = sales.seller_id
WHERE sale_date BETWEEN '2019-01-01' AND '2019-03-31';
========================================================================================

CREATE TABLE views (article_id int , author_id int , viewer_id int , view_date date);

INSERT INTO views VALUES (1,3,5,'2019-08-01');
INSERT INTO views VALUES (1,3,6,'2019-08-02');
INSERT INTO views VALUES (2,7,7,'2019-08-01');
INSERT INTO views VALUES (2,7,6,'2019-08-02');
INSERT INTO views VALUES (4,7,1,'2019-07-22');
INSERT INTO views VALUES (3,4,4,'2019-07-21');
INSERT INTO views VALUES (3,4,4,'2019-07-21');

SELECT * FROM views;

SELECT distinct author_id FROM views where author_id = viewer_id;

=========================================================================================
=========================================================================================

-- Active: 1667924426088@@127.0.0.1@3306
CREATE DATABASE sample;
use sample;
create table country_data(name VARCHAR(10), continent VARCHAR(10), area int , population int, gdp bigint);

DROP TABLE country_data;
INSERT INTO country_data VALUES ('Afganstn','asia',652230, 25500100, 20343000000);
INSERT INTO country_data VALUES ('Albania','Europe',28748, 2831741, 12960000000);
INSERT INTO country_data VALUES ('Algeria','Africa',2381741, 37100000, 188681000000);
INSERT INTO country_data VALUES ('Andorra','Europe',468, 78115, 3712000000);
INSERT INTO country_data VALUES ('Angola','Africa',1246700, 20609294, 100990000000);

SELECT * FROM country_data;

SELECT name , population , area FROM country_data where area > 3000000 or population > 25000000;

Ans: 
name         population   area
afganstn     25500100     652230
Algeria      37100000     2381741

========================================================================================
SELECT name , population , area FROM country_data where area > 3000000 or population > 25000000;

CREATE Table customer (id int, name VARCHAR(20), refree_id int);

INSERT into customer values (1,'will',null);
INSERT into customer values (2,'jane',null);
INSERT into customer values (3,'alex',2);
INSERT into customer values (4,'bill',null);
INSERT into customer values (5,'mark',1);
INSERT into customer values (6,'zack',2);
SELECT * FROM customer;

SELECT name FROM customer WHERE refree_id != 2  OR refree_id IS NULL;

Ans
name
will
jane
bill
mark


=================================================================================

CREATE table customers (id int , name VARCHAR(20) , PRIMARY KEY(id));

INSERT into customers VALUES(1, 'Joe');
INSERT into customers VALUES(2, 'henry');
INSERT into customers VALUES(3, 'sam');
INSERT into customers VALUES(4, 'max');

SELECT * FROM customers;

CREATE TABLE orders (id int, cust_id int);

INSERT into orders values(1,3);
INSERT into orders values(2,1);
SELECT * FROM orders;

select customers.name
from customers
where customers.id not in
(
    select cust_id from orders
);


Ans:
henry
max

============================================================================

CREATE table SalesPerson (sales_id int , s_name VARCHAR(20), salary int , commission_rate int , hire_date DATE);

INSERT INTO SalesPerson VALUES (1, 'john' , 100000, 6,'2006-04-01');
INSERT INTO SalesPerson VALUES (2, 'AMy' , 12000, 5,'2010-05-01');
INSERT INTO SalesPerson VALUES (3, 'mark' , 65000, 12,'2008-12-25');
INSERT INTO SalesPerson VALUES (4, 'pam' , 25000, 25,'2005-01-01');
INSERT INTO SalesPerson VALUES (5, 'Alex' , 5000, 10,'2003-03-02');

CREATE Table Company_table (com_id int , c_name varchar(10), city VARCHAR(10));

INSERT INTO Company_table VALUES (1,'red','boston');
INSERT INTO Company_table VALUES (1,'orange','NY');
INSERT INTO Company_table VALUES (1,'yellow','boston');
INSERT INTO Company_table VALUES (1,'green','Austin');

SELECT * FROM Company_table;

SELECT * FROM SalesPerson;

CREATE table Orders_table (order_id int, order_date date,com_id int,sales_id int , amount int);

INSERT INTO Orders_table VALUES (1,'2014-01-01',3,4,10000);
INSERT INTO Orders_table VALUES (2,'2014-01-02',4,5,5000);
INSERT INTO Orders_table VALUES (3,'2014-01-03',1,1,50000);
INSERT INTO Orders_table VALUES (4,'2014-01-04',1,4,25000);

select sales_id ,com_id, salary, commission_rate , hire_date, city, s_name ,c_name 
from SalesPerson s left join Company_table c;

---------------------------------------------------------------------

CREATE table UserActivity (username VARCHAR(10), activity VARCHAR(10), startDate date , endDate date);

INSERT INTO UserActivity VALUES ('Alice', 'Travel' ,'2020-02-12','2020-02-20');
INSERT INTO UserActivity VALUES ('Alice', 'Dancing' ,'2020-02-21','2020-02-23');
INSERT INTO UserActivity VALUES ('Alice', 'Travel' ,'2020-02-24','2020-02-28');
INSERT INTO UserActivity VALUES ('Bob', 'Travel' ,'2020-02-11','2020-02-18');
SELECT * FROM UserActivity;

SELECT * FROM UserActivity where  count(activity) > 1 ;

select distinct username, activity, startDate, endDate
from
    (select u.*,
           rank() over (partition by username order by startDate desc) as rnk,
           count(activity) over (partition by username) as num
    from UserActivity u) t
where (num <> 1 and rnk = 2) or (num = 1 and rnk = 1);


ANS:

Alice  Dancing    2020-02-21     2020-02-23
Bob    Travel     2020-02-11       2020-02-18
=====================================================

CREATE table students (id int, name VARCHAR(10), marks int);

INSERT INTO students VALUES (1, 'ashley', 81 );
INSERT INTO students VALUES (2, 'samatha', 75 );
INSERT INTO students VALUES (4, 'julia', 76 );
INSERT INTO students VALUES (3, 'belvet', 84 );

SELECT * FROM students ;

select * FROM students WHERE marks > 75 ORDER BY RIGHT(name,3), id ASC ;

Ans:
1 ashley 81
4 julia  76
3 belvet 84

==================================================
CREATE table employee (id int , name varchar(10) , months int, salary int);

INSERT INTO employee VALUES (1, 'kishore' , 17, 23000);
INSERT INTO employee VALUES (2, 'karna' , 17, 23634);
INSERT INTO employee VALUES (3, 'kavin' , 57, 23400);
INSERT INTO employee VALUES (4, 'krishna' , 12, 24000);
INSERT INTO employee VALUES (5, 'ajay' , 14, 23000);
INSERT INTO employee VALUES (6, 'pitchu' , 19, 24000);
INSERT INTO employee VALUES (7, 'mani' , 37, 25000);

SELECT * FROM employee ORDER BY name asc;

==============================================================

CREATE table employee (id int , name varchar(10) , months int, salary int);

INSERT INTO employee VALUES (1, 'kishore' , 17, 23000);
INSERT INTO employee VALUES (2, 'karna' , 17, 23634);
INSERT INTO employee VALUES (3, 'kavin' , 57, 23400);
INSERT INTO employee VALUES (4, 'krishna' , 12, 24000);
INSERT INTO employee VALUES (5, 'ajay' , 14, 23000);
INSERT INTO employee VALUES (6, 'pitchu' , 19, 24000);
INSERT INTO employee VALUES (7, 'mani' , 37, 25000);

SELECT * FROM employee ORDER BY name asc;

5  ajay      14    23000
2  karna     17    23634
3  kavin     57    23400
1  kishore   17    23000
4  krishna   12    24000
7  mani      37    25000
6  pitchu    19    24000

